#!/bin/bash

_jcpath=$HOME/.juniper_networks
_ncpath=$_jcpath/network_connect
_cfgfile=$HOME/.junipervpn.cfg
_logfile=$HOME/.junipervpn.log
_lockfile=$HOME/.junipervpn.lock
_ssl=$_ncpath/ssl.der
_title="juniperVPN"

log() {
    # print line to logfile
    echo "$*" >> $_logfile
}

die() {
    # die with error message
    log "ERROR: $*"
    $_zenity --error --text "$*"
    exit 1
}

msg() {
    # print message for user
    $_zenity --info --text "$*"
}

notif() {
    # print message via notification deamon
    $_notify "$*"
}

input() {
    # get input from user
    while [[ -n "$1" ]]; do
        case "$1" in
            (pass*)     _zopts="$_zopts --hide-text";;
            (entry)     _zopts="$_zopts --entry-text $2"; shift ;;
            (*)         _text="$1";;
        esac
        shift
    done
    $_zenity --entry $_zopts --text "$_text"
}

setup() {
    # install the binary
    echo > /dev/null
}

configure() {
    # configure the unconfigured
    _REMOTE_HOST=$(input "Enter remote hostname")
    _USERNAME=$(input entry "$USERNAME" "Enter username")
    if [[ ! -x $_cfgfile ]]; then
        echo "_REMOTE_HOST=\"$_REMOTE_HOST\"" > $_cfgfile
        echo "_USERNAME=\"$_USERNAME\"" >> $_cfgfile
    fi
}

fetch_ssl() {
    # get ssl certificate
    echo | openssl s_client -connect $_REMOTE_HOST:443 2>&1 | \
        sed -ne '/-BEGIN CERTIFICATE-/,/-ENDCERTIFICATE-/p' |\
        openssl x509 -outform der > $_ssl
}

fetch_dsid() {
    # get dsid
    local _result=$(
        curl -k -v -s -c - -d username=$_USERNAME -d password=$_PASSWORD -d 'realm=Secure ID' \
            -d 'btnSubmit=Sign In' https://$_REMOTE_HOST/dana-na/auth/url_default/login.cgi 2>&1 | \
            egrep "(location:.*confirm|^$_REMOTE_HOST.*DSID)"
        )

    if [[ -n "$(echo $_result | grep 'location:.*confirm')" ]]; then
        # Another session is already active
        # give the user instructions how to end that one
        _sessionurl="${_result#*:}"
        # remove leading spaces
        read  -rd '' _sessionurl <<< "$_sessionurl"
        xdg-open "$_sessionurl"
        msg "Another session was active, please close it. It should be opened in your browser."
    else
        local _DSID=$(echo $_result | awk '/DSID/ { print $7 }')
    fi
    echo $_DSID
}

start_vpn() {
    # start the actual vpn client
    (
    touch $_lockfile
    cd $_ncpath
    echo $_PASSWORD | ./ncui -h $_REMOTE_HOST -u $_USERNAME -c DSID=$_DSID -f $_SSL_CERT
    rm -f $_lockfile
    ) &
    sleep 5
}

add_routes() {
    # set additional routes
    echo > /dev/null
}

test_connection() {
    # test the connection
    echo > /dev/null
}

set_lock() {
    # set lockfile etc
    echo > /dev/null
}

remove_lock() {
    # remove lock etc
    echo > /dev/null
}

main() {
    # main part

    _zenity=$(which zenity)
    [[ -z $_zenity ]] && die "Could not find 'zenity' binary..."
    _zenity="$_zenity --title $_title"

    _notify=$(which notify-send)
    [[ -z $_notify ]] && die "Could not find 'notify-send' binary..."

    # vpn is active, remove lock on YES
    if [[ -e $_lockfile ]]; then
        if $_zenity --question --text "VPN active, kill it?"; then
            rm -f $_lockfile
            exit 0
        else
            exit 0
        fi
    fi

    # restart myself in background
    if [[ "x$1" != "x--" ]]; then
        $0 -- >> $_logfile 2>&1 &
        exit 0
    fi

    if [[ ! -d $_jcpath ]]; then
        setup
        exit 0
    fi

    # set default ssl certificate path, can be overridden in cfgfile
    _SSL_CERT=$_ssl

    [[ -r $_cfgfile ]] && . $_cfgfile

    [[ ! $_REMOTE_HOST ]] || [[ ! $_USERNAME ]] && configure

    [[ ! -r $_SSL_CERT ]] || [[ -z $_ssl ]] && fetch_ssl

    _PASSWORD=$(input password "Enter PIN+SecureID")
    [[ $_PASSWORD ]] || die "PIN+SecureID not specified"

    _DSID=$(fetch_dsid)
    [[ $_DSID ]] || die "Session ID not found"

    start_vpn

    # sleep until the lockfile has been removed, kill ncui if it was.
    while [[ -e $_lockfile ]]; do
        sleep 1
    done

    killall ncui > /dev/null 2>&1
    msg "Juniper VPN client was killed"

}

main "$@"


